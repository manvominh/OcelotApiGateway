version: '3.4'

networks:
  backend:

services:
  customerdb:
    container_name: customer-db
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=password@12345#
    networks:
      - backend
    ports:
      - 18001:1433

  customerwebapi:
    container_name: customer-api
    image: ${DOCKER_REGISTRY-}customerwebapi
    build:
      context: .
      dockerfile: CustomerWebApi/Dockerfile
    networks:
        - backend
    environment:
      - DB_HOST=customerdb
      - DB_NAME=DMS_Customer
      - DB_SA_PASSWORD=password@12345#
 
  productdb:
    container_name: product-db
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=password@12345#
    networks:
      - backend
    ports:
      - 18002:1433

  productwebapi:
    container_name: product-api
    image: ${DOCKER_REGISTRY-}productwebapi
    build:
      context: .
      dockerfile: ProductWebApi/Dockerfile
    networks:
        - backend
    environment:
      - DB_HOST=productdb
      - DB_NAME=DMS_Product
      - DB_SA_PASSWORD=password@12345#


  apigateway:
    container_name: api-gateway
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: .
      dockerfile: ApiGateway/Dockerfile
    ports:
      - 8001:8080
    networks:
      - backend


  authenticationwebapi:
    container_name: authentication-api
    image: ${DOCKER_REGISTRY-}authenticationwebapi
    build:
      context: .
      dockerfile: AuthenticationWebApi/Dockerfile
    networks:
      - backend

